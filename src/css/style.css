html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

.btn {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #e53935;
  border: 0;
  border-radius: 3px;
  color: #000;
  cursor: pointer;
  display: inline-block;
  font-family: "Roboto";
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.75em 1.5em;
  text-align: center;
  text-decoration: none;
  transition: background-color 150ms ease;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  .btn:hover {
    background-color: #b72e2a;
    color: #fff; }
  .btn:focus {
    outline: 3px solid rgba(229, 57, 53, 0.6);
    outline-offset: 2px; }
  .btn:disabled {
    cursor: not-allowed;
    opacity: .5; }
    .btn:disabled:hover {
      background-color: #e53935; }

fieldset {
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 0; }

legend {
  font-weight: 600;
  margin-bottom: 0.375em;
  padding: 0; }

label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.375em; }

input,
select,
textarea {
  display: block;
  font-family: "Roboto";
  font-size: 16px; }

input:hover {
  border-color: #b1b1b1; }

input:focus {
  border-color: #e53935;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(229, 57, 53, 0.7);
  outline: none; }

input:disabled {
  background-color: #f2f2f2;
  cursor: not-allowed; }
  input:disabled:hover {
    border: 1px solid #ddd; }

input::-webkit-input-placeholder {
  color: #858585; }

input:-ms-input-placeholder {
  color: #858585; }

input::placeholder {
  color: #858585; }

textarea {
  resize: vertical; }

[type='checkbox'],
[type='radio'] {
  display: inline;
  margin-right: 0.375em; }

[type='file'] {
  margin-bottom: 0.75em;
  width: 100%; }

select {
  margin-bottom: 0.75em;
  width: 100%; }

[type='checkbox']:focus,
[type='radio']:focus,
[type='file']:focus,
select:focus {
  outline: 3px solid rgba(229, 57, 53, 0.6);
  outline-offset: 2px; }

html {
  background-color: #fff;
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

html,
body {
  height: 100%; }

body {
  margin: 0; }

.page-section {
  padding-top: 110px;
  padding-bottom: 110px; }

.container {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto; }
  .container::after {
    clear: both;
    content: "";
    display: block; }
  .container__flex {
    display: -ms-flexbox;
    display: flex; }

.container-lead {
  max-width: 800px;
  margin-left: auto;
  margin-right: auto; }
  .container-lead::after {
    clear: both;
    content: "";
    display: block; }

.row {
  display: block; }
  .row::after {
    clear: both;
    content: "";
    display: block; }

.bg-red {
  background-color: #e53935; }

.bg-black {
  background-color: #212121; }

.bg-white {
  background-color: #fff; }

.bg-black,
.bg-red {
  color: rgba(250, 250, 250, 0.85); }
  .bg-black h2,
  .bg-black h3,
  .bg-black h4,
  .bg-red h2,
  .bg-red h3,
  .bg-red h4 {
    color: #fafafa;
    font-weight: 500; }
  .bg-black p,
  .bg-red p {
    font-size: 1.25em;
    font-weight: 300;
    line-height: 1.6; }

.pillar-wrap {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%;
  margin-bottom: 42px; }
  .pillar-wrap:last-child {
    margin-right: 0; }
  .pillar-wrap__middle {
    margin-left: 34.11922%; }
  .pillar-wrap__right {
    margin-left: 68.23843%; }

.uppercase {
  color: #000;
  font-weight: 900;
  text-transform: uppercase; }

ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0; }

dl {
  margin: 0; }

dt {
  font-weight: 600;
  margin: 0; }

dd {
  margin: 0; }

figure {
  margin: 0; }

img,
picture {
  margin: 0;
  max-width: 100%; }

table {
  border-collapse: collapse;
  margin: 1.5em 0;
  table-layout: fixed;
  text-align: left;
  width: 100%; }

thead {
  line-height: 1.2;
  vertical-align: bottom; }

tbody {
  vertical-align: top; }

tr {
  border-bottom: 1px solid #ddd; }

th {
  font-weight: 600; }

th,
td {
  padding: 0.75em 0.75em 0.75em 0; }

html {
  color: #333;
  font-family: "Roboto";
  font-size: 100%;
  line-height: 1.5; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Roboto";
  font-size: 1.25em;
  line-height: 1.2;
  margin: 0 0 0.75em; }

h2 {
  font-size: 36px;
  font-weight: 500; }

h3 {
  font-size: 1.95312em;
  font-weight: 500; }

h5 {
  color: #e53935;
  font-size: 18px;
  font-weight: 400; }

p {
  line-height: 1.6;
  margin: 0 0 0.75em; }

a {
  color: #e53935;
  text-decoration: none;
  transition: color 150ms ease; }
  a:hover {
    color: #ac2b28; }
  a:focus {
    outline: 3px solid rgba(229, 57, 53, 0.6);
    outline-offset: 2px; }

hr {
  border-bottom: 1px solid #ddd;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  margin: 1.5em 0; }

.headline-w-sub {
  margin-bottom: 42px; }
  .headline-w-sub > * {
    margin-bottom: 0; }

.text-center {
  text-align: center; }

.mb-0 {
  margin-bottom: 0; }

.split-section {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  position: relative; }
  .split-section::after {
    clear: both;
    content: "";
    display: block; }

.split-half {
  overflow: hidden;
  position: relative;
  width: 100%; }
  @media only screen and (min-width: 860px) {
    .split-half {
      position: initial;
      width: 50%; } }

@media only screen and (min-width: 860px) {
  .split-left {
    float: left; } }

@media only screen and (min-width: 860px) {
  .split-right {
    float: right; } }

.split-right .split-bg {
  left: inherit;
  right: 0; }

.split-bg {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 0; }
  @media only screen and (min-width: 860px) {
    .split-bg {
      width: 50%; } }

.vertical-center {
  padding-top: 100px;
  padding-bottom: 100px; }
  @media only screen and (min-width: 860px) {
    .vertical-center {
      padding-top: 0;
      padding-bottom: 0; } }

.split-section-content {
  padding: 110px 24px;
  margin: 0 auto;
  max-width: 450px;
  position: relative;
  z-index: 1; }
  .split-section-content .visible {
    font-size: 4.76837em;
    margin-bottom: 0; }
  @media only screen and (min-width: 860px) {
    .split-section-content {
      padding-right: 0;
      padding-left: 0;
      max-width: 325px; }
      .split-section-content .visible {
        font-size: 3.8147em; } }
  @media (min-width: 1120px) {
    .split-section-content {
      max-width: 400px; }
      .split-section-content .visible {
        font-size: 4.76837em; } }

.event-copy {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%; }
  .event-copy:last-child {
    margin-right: 0; }
  .event-copy .btn {
    margin-top: 42px; }

.event-cards {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 65.88078%; }
  .event-cards:last-child {
    margin-right: 0; }

.card {
  background-color: #fafafa;
  box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.1), 0 5px 5px 0 rgba(0, 0, 0, 0.1);
  position: relative;
  transition: .5s;
  float: left;
  display: block;
  margin-right: 3.57866%;
  width: 48.21067%; }
  .card:last-child {
    margin-right: 0; }
  .card img {
    display: block;
    height: auto;
    margin: 0 auto;
    max-width: 100%; }
  .card-content {
    padding: 32px 24px; }
  .card-title {
    margin-bottom: 24px; }
    .card-title h4 {
      color: #e53935;
      font-size: 24px;
      margin-bottom: 0; }
    .card-title span {
      color: #666666;
      font-size: 14px; }
  .card p {
    color: #212121;
    font-size: 18px; }

.team .headline-w-sub {
  margin-bottom: 64px; }
  .team .headline-w-sub span {
    color: #ff6f60;
    font-weight: 400;
    letter-spacing: 1px; }

.team-member {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%;
  text-align: center; }
  .team-member:last-child {
    margin-right: 0; }
  .team-member > img {
    margin-bottom: 16px;
    max-width: 325px; }
  .team-member__name {
    font-size: 24px !important;
    font-weight: 500; }
  .team-member__title {
    font-size: 16px !important; }

.contact {
  overflow: hidden; }

.contact-section__copy {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%;
  position: relative; }
  .contact-section__copy:last-child {
    margin-right: 0; }
  .contact-section__copy p {
    font-size: 20px; }
  .contact-section__copy::before {
    position: absolute;
    bottom: -50%;
    left: -25%;
    height: 100%;
    width: 125%;
    background-image: url("../logo-primary.png");
    background-repeat: no-repeat;
    background-size: contain;
    content: '';
    display: block;
    opacity: .3; }

.contact-section__form {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 65.88078%; }
  .contact-section__form:last-child {
    margin-right: 0; }
  .contact-section__form span {
    color: #484848;
    font-size: 12px;
    font-weight: 300;
    letter-spacing: 1px;
    text-transform: uppercase; }

.form-item {
  margin-bottom: 24px; }
  .form-item__half {
    float: left;
    display: block;
    margin-right: 3.57866%;
    width: 48.21067%; }
    .form-item__half:last-child {
      margin-right: 0; }
  .form-item__full {
    float: left;
    display: block;
    margin-right: 3.57866%;
    width: 100%; }
    .form-item__full:last-child {
      margin-right: 0; }

input[type=text],
input[type=email] {
  padding: 0 0 0 10px;
  height: 40px;
  width: 100%;
  border-width: 0 0 1px;
  background: transparent;
  border-bottom-color: #999;
  color: #484848;
  font-size: 12px;
  font-weight: 300;
  letter-spacing: 1px;
  text-transform: uppercase; }

.checkbox-inline {
  line-height: 1; }
  .checkbox-inline li {
    cursor: pointer;
    display: inline-block;
    margin-right: 1.5em;
    vertical-align: middle; }
    .checkbox-inline li:last-child {
      margin-right: 0; }
    .checkbox-inline li > * {
      vertical-align: middle; }
    .checkbox-inline li label {
      display: inline;
      margin: 0; }

textarea {
  height: 160px;
  width: 100%;
  padding: 10px;
  background: transparent;
  border: 1px solid #999;
  color: #484848;
  font-size: 12px;
  font-weight: 300;
  letter-spacing: 1px;
  margin-top: 1.5em;
  text-transform: uppercase; }

.btn-submit {
  display: block;
  width: 100%; }

.footer {
  padding: 16px 0; }
  .footer-nav {
    float: left; }
  .footer-social {
    float: right;
    font-size: 0;
    line-height: 1; }
    .footer-social a {
      height: 36px;
      line-height: 36px; }
      .footer-social a:hover svg {
        fill: #ff6f60; }
    .footer-social svg {
      fill: #fafafa;
      height: 100%;
      max-width: 100%;
      transition: all 0.27s cubic-bezier(0.3, 0.1, 0.58, 1); }
  .footer h6 {
    font-size: 16px;
    font-weight: 500; }
  .footer p {
    color: #fafafa; }
  .footer a {
    color: rgba(250, 250, 250, 0.85); }
    .footer a:hover {
      color: #ff6f60; }
  .footer p,
  .footer a {
    margin-right: 16px;
    margin-bottom: 0;
    display: inline-block;
    font-size: 12px; }
  .footer nav {
    display: inline-block; }
    .footer nav a:last-child {
      margin-right: 0; }

.navbar {
  margin-bottom: 20px;
  min-height: 50px;
  position: relative;
  transition: 150ms; }

.navbar-brand {
  float: left;
  max-height: 60px;
  padding-left: 1em;
  padding-right: 2em; }
  .navbar-brand .cls-1 {
    fill: #e53935 !important; }
  .navbar-brand svg {
    height: 60px;
    width: 80%;
    transition: 150ms; }
    .navbar-brand svg path {
      fill: #fafafa;
      transition: 150ms; }

.navbar--size--lg {
  padding-top: 1.5em;
  padding-bottom: 1.5em; }

.navbar--size--sm {
  padding-top: 0.75em;
  padding-bottom: 0.75em; }

.navbar--color--secondary {
  background: #212121; }

.navbar--color--ghost {
  background: transparent; }
  .navbar--color--ghost svg {
    height: 60px;
    width: 100%; }
    .navbar--color--ghost svg path {
      fill: #000; }
  .navbar--color--ghost .nav-link a {
    color: #ff6f60; }

.navbar-fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030; }

.navbar-nav {
  min-height: 60px;
  z-index: 9999999; }
  @media screen and (min-width: 53.75em) {
    .navbar-nav {
      float: right; } }
  .navbar-nav ul {
    clear: both;
    display: none;
    margin: 0 auto;
    overflow: visible;
    padding: 0;
    width: 100%;
    z-index: 9999; }
    @media screen and (min-width: 53.75em) {
      .navbar-nav ul {
        display: inline;
        margin: 0; } }
    .navbar-nav ul li {
      background: #484848;
      display: block;
      line-height: 60px;
      overflow: hidden;
      padding-right: 1.5em;
      text-align: right;
      width: 100%;
      z-index: 9999; }
      @media screen and (min-width: 53.75em) {
        .navbar-nav ul li {
          background: transparent;
          display: inline;
          line-height: 60px;
          text-decoration: none;
          width: auto; } }
      .navbar-nav ul li a {
        color: rgba(250, 250, 250, 0.85);
        display: inline-block; }
        .navbar-nav ul li a:hover {
          color: #ff6f60; }

.hero {
  height: 80vh;
  position: relative;
  min-height: 600px; }
  .hero::before {
    content: "";
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: rgba(34, 34, 34, 0.4); }

.overlay {
  background: rgba(0, 0, 0, 0.6);
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: -1; }

/* Style the video: 100% width and height to cover the entire window */
#myVideo {
  position: fixed;
  top: 50%;
  left: 50%;
  -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  z-index: -100; }

.home-content {
  display: table;
  width: 100%;
  height: 100%;
  text-align: center;
  position: relative; }

.home-text {
  display: table-cell;
  height: 100%;
  vertical-align: middle; }
  .home-text svg {
    height: 150px;
    margin-bottom: 3em; }

.hs-line-8 {
  text-transform: uppercase;
  letter-spacing: 0.25em;
  color: #212121; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
